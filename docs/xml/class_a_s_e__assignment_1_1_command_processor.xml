<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_a_s_e__assignment_1_1_command_processor" kind="class" language="C#" prot="package">
    <compoundname>ASE_assignment::CommandProcessor</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_a_s_e__assignment_1_1_command_processor_1ab94af3397a74a92011a113f479847973" prot="private" static="no" mutable="no">
        <type><ref refid="class_a_s_e__assignment_1_1_pen_controller" kindref="compound">PenController</ref></type>
        <definition>PenController ASE_assignment.CommandProcessor.controller</definition>
        <argsstring></argsstring>
        <name>controller</name>
        <qualifiedname>ASE_assignment.CommandProcessor.controller</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="17" column="31" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_s_e__assignment_1_1_command_processor_1a9293d6241aac023ff259eb9f85752df0" prot="private" static="no" mutable="no">
        <type><ref refid="class_a_s_e__assignment_1_1_canvas" kindref="compound">Canvas</ref></type>
        <definition>Canvas ASE_assignment.CommandProcessor.canvas</definition>
        <argsstring></argsstring>
        <name>canvas</name>
        <qualifiedname>ASE_assignment.CommandProcessor.canvas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="18" column="24" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_s_e__assignment_1_1_command_processor_1ad8a32a96d60ebcf74ae7388eeade0336" prot="private" static="no" mutable="no">
        <type>Dictionary&lt; string, CommandAction &gt;</type>
        <definition>Dictionary&lt;string, CommandAction&gt; ASE_assignment.CommandProcessor.validCommands</definition>
        <argsstring></argsstring>
        <name>validCommands</name>
        <qualifiedname>ASE_assignment.CommandProcessor.validCommands</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="20" column="28" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_s_e__assignment_1_1_command_processor_1a6ee2f3d82eb70daf089f7b88e28eb315" prot="private" static="no" mutable="no">
        <type><ref refid="class_a_s_e__assignment_1_1_conditionals" kindref="compound">Conditionals</ref></type>
        <definition>Conditionals ASE_assignment.CommandProcessor.conditionals</definition>
        <argsstring></argsstring>
        <name>conditionals</name>
        <qualifiedname>ASE_assignment.CommandProcessor.conditionals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="21" column="30" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_s_e__assignment_1_1_command_processor_1a3e7155240dd2d3c260bf52af136b698c" prot="private" static="no" mutable="no">
        <type><ref refid="class_a_s_e__assignment_1_1_variable_manager" kindref="compound">VariableManager</ref></type>
        <definition>VariableManager ASE_assignment.CommandProcessor.variableManager</definition>
        <argsstring></argsstring>
        <name>variableManager</name>
        <qualifiedname>ASE_assignment.CommandProcessor.variableManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="22" column="33" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_s_e__assignment_1_1_command_processor_1a9ed7645149c46f5e765b1ed58c4850a6" prot="private" static="no" mutable="no">
        <type><ref refid="class_a_s_e__assignment_1_1_loops" kindref="compound">Loops</ref></type>
        <definition>Loops ASE_assignment.CommandProcessor.loops</definition>
        <argsstring></argsstring>
        <name>loops</name>
        <qualifiedname>ASE_assignment.CommandProcessor.loops</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="23" column="23" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_s_e__assignment_1_1_command_processor_1a200ab35aa7bb40b5df3c99a6858ca058" prot="private" static="no" mutable="no">
        <type><ref refid="class_a_s_e__assignment_1_1_methods" kindref="compound">Methods</ref></type>
        <definition>Methods ASE_assignment.CommandProcessor.methods</definition>
        <argsstring></argsstring>
        <name>methods</name>
        <qualifiedname>ASE_assignment.CommandProcessor.methods</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="24" column="25" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a3d6f361b55d24ea94449150f9bb7e598" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void ASE_assignment.CommandProcessor.CommandAction</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>CommandAction</name>
        <qualifiedname>ASE_assignment.CommandProcessor.CommandAction</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="19" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a803eb0608c8719458776fb7496d7c103" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.MoveTo</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>MoveTo</name>
        <qualifiedname>ASE_assignment.CommandProcessor.MoveTo</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Move the pen to the location specified by coordinates in the IntParms. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line containing the command and parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception when no coordinates are provided</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="66" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="66" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a9a84d55963e463e06f98213be6eba46f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.DrawTo</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>DrawTo</name>
        <qualifiedname>ASE_assignment.CommandProcessor.DrawTo</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Draws a line from the previous location to a new location specified by the coordinates provided. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line containing the command and parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception when no coordinates are provided</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="93" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="93" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1ac964e0ade9000dc7ac2c5b91bb5a3e59" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.Clear</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>Clear</name>
        <qualifiedname>ASE_assignment.CommandProcessor.Clear</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Clears the bitmap canvas when the clear command is entered. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line that should contain the clear command</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception when clear is combined with an unexpected parameter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="119" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="119" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1ac3649982b3c9dd30490071e499df8759" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.Reset</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>Reset</name>
        <qualifiedname>ASE_assignment.CommandProcessor.Reset</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Resets the cursor to the 0,0 coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line that should contain the reset command</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception when reset is combined with an unexpected parameter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="137" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="137" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1ab4393568b26651cef0e95450044775dd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.DrawRectangle</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>DrawRectangle</name>
        <qualifiedname>ASE_assignment.CommandProcessor.DrawRectangle</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Draws a rectangle with a width and height specified by coordinates in IntParams. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line that should contain the rectangle command and a set of coordinates</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception if the parameters contain anything aside from two integers</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="154" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="154" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a71fa6ea769bd00c54025fbb59b89137a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.DrawCircle</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>DrawCircle</name>
        <qualifiedname>ASE_assignment.CommandProcessor.DrawCircle</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Draws a circle from a provided radius. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line that contains the circle command and an integer radius</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception if anything but a single integer parameter is provuded</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="179" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="179" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a5b8ec25b2996e26b8bc7e24df110a522" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.DrawTriangle</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>DrawTriangle</name>
        <qualifiedname>ASE_assignment.CommandProcessor.DrawTriangle</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Creates an equilateral triangle from a provided integer parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line that contains the triangle command and an integer parameter for size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception if any parameter except a single integer is provided</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="218" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="218" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a04a4e649b3bde84b3833cb0157a84515" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.DrawPolygon</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>DrawPolygon</name>
        <qualifiedname>ASE_assignment.CommandProcessor.DrawPolygon</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Draw a polygon with a custom number of sides. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line containing the command, number of sides, and size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SyntaxException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="260" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="260" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a77e249ea02b9355c3f4722501ff8e4cd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.PenColor</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>PenColor</name>
        <qualifiedname>ASE_assignment.CommandProcessor.PenColor</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Changes the pen colour based on the parameter colour that was entered. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line that should contain the pen command followed by one of the available colours</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception if the colour is not available or the parameter is missing</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="297" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="297" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1aa7ebabb6e71ff0f372f7a9a166ad569b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.Fill</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>Fill</name>
        <qualifiedname>ASE_assignment.CommandProcessor.Fill</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Enables shape fill to draw solid shapes instead of outlines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line that contains the fill command followed by &apos;on&apos; or &apos;off&apos;</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception if an invalid parameter is entered</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="334" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="334" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a7079b18f0627acb95355c2edc4676ccd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.If</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>If</name>
        <qualifiedname>ASE_assignment.CommandProcessor.If</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calls the If method in the Conditionals class</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line of commands, for the string parameters to be passed in</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="353" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="353" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a645bd0bf9348af9bc7dbade5aa97ca69" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.EndIf</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>EndIf</name>
        <qualifiedname>ASE_assignment.CommandProcessor.EndIf</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Calls the EndIf method in the Conditionals class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line of commands, for string parameters to be passed in</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="365" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="365" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1aa1110fc7aabf91fde5340c5de6076152" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.Var</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>Var</name>
        <qualifiedname>ASE_assignment.CommandProcessor.Var</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Calls the DeclareVariable method in the VariableManager class to create a new variable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="374" column="22" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="374" bodyend="380"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a90cc14a7065e49919c1a5cbdab6d4cd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ASE_assignment.CommandProcessor.CommandProcessor</definition>
        <argsstring>(PenController controller, Canvas canvas, VariableManager variableManager)</argsstring>
        <name>CommandProcessor</name>
        <qualifiedname>ASE_assignment.CommandProcessor.CommandProcessor</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_pen_controller" kindref="compound">PenController</ref></type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_canvas" kindref="compound">Canvas</ref></type>
          <declname>canvas</declname>
        </param>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_variable_manager" kindref="compound">VariableManager</ref></type>
          <declname>variableManager</declname>
        </param>
        <briefdescription>
<para>Initialise a new instance of the CommandProcessor class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The pen controller, that defines how the pen behaves on the canvas</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>canvas</parametername>
</parameternamelist>
<parameterdescription>
<para>The canvas is the bitmap to be drawn on</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="31" column="16" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="31" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a0c66d16f946ba5467f1da7546f73d212" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.RunLines</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>RunLines</name>
        <qualifiedname>ASE_assignment.CommandProcessor.RunLines</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Maps valid commands from the validCommands dictionary to their corresponding functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line, that contains both a command and the corresponding parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws an exception if the command is not found in the validCommand dictionary</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="386" column="21" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="386" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a58a47f15c7e98fb0802e6eff8fe5fc21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ASE_assignment.CommandProcessor.ResolveParam</definition>
        <argsstring>(string parameter)</argsstring>
        <name>ResolveParam</name>
        <qualifiedname>ASE_assignment.CommandProcessor.ResolveParam</qualifiedname>
        <param>
          <type>string</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Resolves parameters entered into a command to a variable, eg. when using DrawTo a,100 will match a to the correct value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters following the command</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An integer value matched to the variable used in parameter</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws exception if the incorrect format of parameter is given</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="484" column="20" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="484" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="class_a_s_e__assignment_1_1_command_processor_1a1fea1ff5170dbb6e6b9d3887eff06124" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ASE_assignment.CommandProcessor.While</definition>
        <argsstring>(Command parsedLine)</argsstring>
        <name>While</name>
        <qualifiedname>ASE_assignment.CommandProcessor.While</qualifiedname>
        <param>
          <type><ref refid="class_a_s_e__assignment_1_1_command" kindref="compound">Command</ref></type>
          <declname>parsedLine</declname>
        </param>
        <briefdescription>
<para>Begin a while loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parsedLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed line from the Command object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="516" column="21" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="516" bodyend="522"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Takes the parsed commands as parameters and runs the desired command by calling the correct function. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>ASE_assignment.CommandProcessor</label>
        <link refid="class_a_s_e__assignment_1_1_command_processor"/>
        <childnode refid="2" relation="usage">
          <edgelabel>controller</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>canvas</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>conditionals</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>variableManager</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>loops</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>methods</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>ASE_assignment.Canvas</label>
        <link refid="class_a_s_e__assignment_1_1_canvas"/>
      </node>
      <node id="4">
        <label>ASE_assignment.Conditionals</label>
        <link refid="class_a_s_e__assignment_1_1_conditionals"/>
        <childnode refid="5" relation="usage">
          <edgelabel>variableManager</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>ASE_assignment.Loops</label>
        <link refid="class_a_s_e__assignment_1_1_loops"/>
        <childnode refid="5" relation="usage">
          <edgelabel>variableManager</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>ASE_assignment.Methods</label>
        <link refid="class_a_s_e__assignment_1_1_methods"/>
        <childnode refid="5" relation="usage">
          <edgelabel>variableManager</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>ASE_assignment.PenController</label>
        <link refid="class_a_s_e__assignment_1_1_pen_controller"/>
        <childnode refid="3" relation="usage">
          <edgelabel>canvas</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>ASE_assignment.VariableManager</label>
        <link refid="class_a_s_e__assignment_1_1_variable_manager"/>
      </node>
    </collaborationgraph>
    <location file="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" line="15" column="13" bodyfile="D:/GitHub-Repos/ASE-assignment/ASE-assignment/CommandProcessor.cs" bodystart="16" bodyend="525"/>
    <listofallmembers>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a9293d6241aac023ff259eb9f85752df0" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>canvas</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1ac964e0ade9000dc7ac2c5b91bb5a3e59" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>Clear</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a3d6f361b55d24ea94449150f9bb7e598" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>CommandAction</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a90cc14a7065e49919c1a5cbdab6d4cd5" prot="public" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>CommandProcessor</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a6ee2f3d82eb70daf089f7b88e28eb315" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>conditionals</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1ab94af3397a74a92011a113f479847973" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>controller</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a71fa6ea769bd00c54025fbb59b89137a" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>DrawCircle</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a04a4e649b3bde84b3833cb0157a84515" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>DrawPolygon</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1ab4393568b26651cef0e95450044775dd" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>DrawRectangle</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a9a84d55963e463e06f98213be6eba46f" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>DrawTo</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a5b8ec25b2996e26b8bc7e24df110a522" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>DrawTriangle</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a645bd0bf9348af9bc7dbade5aa97ca69" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>EndIf</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1aa7ebabb6e71ff0f372f7a9a166ad569b" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>Fill</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a7079b18f0627acb95355c2edc4676ccd" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>If</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a9ed7645149c46f5e765b1ed58c4850a6" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>loops</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a200ab35aa7bb40b5df3c99a6858ca058" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>methods</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a803eb0608c8719458776fb7496d7c103" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>MoveTo</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a77e249ea02b9355c3f4722501ff8e4cd" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>PenColor</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1ac3649982b3c9dd30490071e499df8759" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>Reset</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a58a47f15c7e98fb0802e6eff8fe5fc21" prot="public" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>ResolveParam</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a0c66d16f946ba5467f1da7546f73d212" prot="public" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>RunLines</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1ad8a32a96d60ebcf74ae7388eeade0336" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>validCommands</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1aa1110fc7aabf91fde5340c5de6076152" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>Var</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a3e7155240dd2d3c260bf52af136b698c" prot="private" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>variableManager</name></member>
      <member refid="class_a_s_e__assignment_1_1_command_processor_1a1fea1ff5170dbb6e6b9d3887eff06124" prot="public" virt="non-virtual"><scope>ASE_assignment::CommandProcessor</scope><name>While</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
